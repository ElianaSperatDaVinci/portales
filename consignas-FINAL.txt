✔️ Ofrecer a los usuarios algún servicio o producto
● Implementar el carrito de compras
✔️ Incluir una sección de blog/novedades/noticias donde se hable del servicio/producto/e-commerce o de temas relacionados.
✔️ Incluir una home que presente el producto.
✔️ Tener un registro y autenticación de usuarios.
● Tener un perfil para los usuarios autenticados, donde puedan ver/editar su información.
● Si el sitio es un servicio/producto para su contratación, debe poder administrar su plan de suscripción, incluyendo cancelarlo, cambiarlo, etc, y ver desde cuándo está suscripto. Esta información debe ya estar cargada desde los Seeders para, al menos, algunos usuarios.
● Si el sitio es un e-commerce, debe poder ver su carrito de compras, realizar el pedido, y ver un historial de los pedidos realizados.
● Ambos casos (suscripción/contratación de producto/servicio como - ecommerce) deben incluir la correspondiente pasarela de pago con el modo sandbox de MercadoPago.

El admin, al menos, debe:
● Requerir de una autenticación de un usuario administrador para acceder.
● Proveer de un ABM para administrar las entradas del blog/novedades/noticias.
● Poder ver los usuarios, y de tener uno, el servicio que tienen contratado, en el caso del servicio para contratar, o el historial de compras realizada, en el caso del e-commerce.
● Tener un "Dashboard" inicial que muestre algunas estadísticas relevantes (ej: plan con más suscriptores, productos más comprados, mes con mayor facturación, etc).

La base de datos:
● Debe constar de las tablas necesarias para cumplir la consigna.
✔️ La tabla para usuarios debe estar constituida de al menos 3 campos:
    ✔️ uno para el id
    ✔️ uno para el nombre de usuario
    ✔️ otro para el password

Al menos una de las otras tablas debe estar constituida de al menos 5 campos (sin contar PK y los campos de fechas de Laravel).
✔️ Toda la creación de tablas, y la carga inicial de datos, deberá estar realizada con migrations y seeders.
✔️ Debe haber relaciones entre tablas.

Debe usarse el framework Laravel en la versión vista en la cursada o posterior aplicando los principios de la programación orientada a objetos, y aprovechando los mecanismos de trabajo ofrecidos por el mismo, siguiendo sus prácticas recomendadas.
✔️ Las vistas deberán utilizar el motor de template Blade para su renderizado.
✔️ Todos los ingresos de datos deben estar validados, e informar los errores ocurridos, en caso de haberlos.
✔️ La tabla de los blog/noticias/etc debe poder hacer alta/modificación de imágenes.
✔️ Debe haber al menos 2 roles para los usuarios: usuario común y administrador.
Para la verificación del usuario administrador, debe realizarse un Middleware personalizado que haga tal verificación.
✔️ Debe haber modelos relacionados, según las relaciones que existan en la base de datos.